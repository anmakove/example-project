{{- $chart := (include "app.chart" .) }}
{{- $fullname := (include "app.fullname" .) }}
{{- $shortname := (include "app.shortname" .) }}
{{- $envprefix := (include "app.envprefix" .) }}
{{- $labels := (include "app.labels" .) }}
{{- $saname := (include "app.serviceAccountName" .) }}
{{- range $job, $value := $.Values.cronJobs }}
{{- if $value.enabled }}
{{- $cronjobname := print $fullname "-" $job | trunc 51 | trimSuffix "-" }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ $cronjobname }}"
  labels:
{{ $labels | indent 4 }}
    {{- if $.Values.app.datadog.enabled }}
    tags.datadoghq.com/env: "{{ $.Values.env }}" # Unified service tag - Pod Env tag
    tags.datadoghq.com/service: "{{ $cronjobname }}" # Unified service tag - Pod Service tag
    tags.datadoghq.com/version: "{{ $.Values.image.tag }}" # Unified service tag - Pod Version tag
    {{- end }}
spec:
  schedule: "{{ $value.schedule }}"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: "Forbid"
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 300
      backoffLimit: 4
      template:
        metadata:
          {{- if $.Values.app.datadog.enabled }}
          annotations:
            admission.datadoghq.com/java-lib.version: "{{ $.Values.app.datadog.libVersion }}"
            {{- if and ($.Values.app.gitRepositoryUrl) ($.Values.app.gitCommitSHA) }}
            ad.datadoghq.com/tags: '{"git.commit.sha": "{{ $.Values.app.gitCommitSHA }}", "git.repository_url": "{{ $.Values.app.gitRepositoryUrl }}"}'
            {{- end }}
          {{- end }}
          labels:
            component: "{{ $cronjobname }}"
            {{- if $.Values.app.datadog.enabled }}
            tags.datadoghq.com/env: "{{ $.Values.env }}" # Unified service tag - Pod Env tag
            tags.datadoghq.com/service: "{{ $cronjobname }}" # Unified service tag - Pod Service tag
            tags.datadoghq.com/version: "{{ $.Values.image.tag }}" # Unified service tag - Pod Version tag
            admission.datadoghq.com/enabled: "true"
            {{- end }}
        spec:
          {{- if or ($.Values.app.nodeSelector) ($value.nodeSelectorOverride) }}
          nodeSelector:
            node.kubernetes.io/instance-group: {{ default $.Values.app.nodeSelector $value.nodeSelectorOverride }}
          {{- end }}
          restartPolicy: OnFailure
          serviceAccountName: "{{ $saname }}"
          containers:
          - name: "{{ $fullname }}-{{ $job }}"
            image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
            imagePullPolicy: {{ $.Values.image.pullPolicy }}
            command: {{ $value.command | toJson }}
            workingDir: {{ $value.workingDir | quote }}
            envFrom:
              - secretRef:
                  name: "{{ $fullname }}-{{ $job }}-es"
              - configMapRef:
                  name: "{{ $fullname }}-{{ $job }}"
            resources:
              {{- toYaml $value.resources | nindent 14 }}
{{- end }}
{{- end }}
